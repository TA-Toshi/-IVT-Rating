import numpy as np
import yadisk
import pandas as pd
from io import BytesIO

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
OAUTH_TOKEN = 'y0__xD5u5uzBhiP2jYgqtfH3BJPdoNuBfWhA76z5-DYzuauTa1Ngw'
FILE_PATH_IVT = '–ó–∞–≥—Ä—É–∑–∫–∏/–¢–µ–∫—É—â–∞—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å 1 –∫—É—Ä—Å/–ò–í–¢ –∂—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫.xlsx'  # –ù–∞–ø—Ä–∏–º–µ—Ä, '–†–∞–±–æ—á–∏–µ/–¥–∞–Ω–Ω—ã–µ.xlsx'
FILE_PATH_IT = '–ó–∞–≥—Ä—É–∑–∫–∏/–¢–µ–∫—É—â–∞—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å 1 –∫—É—Ä—Å/–ò–¢ –∂—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫.xlsx'
FILE_PATH_PIE = '–ó–∞–≥—Ä—É–∑–∫–∏/–¢–µ–∫—É—â–∞—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å 1 –∫—É—Ä—Å/–ü–ò–≠–∂—É—Ä–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫.xlsx'

y = yadisk.YaDisk(token=OAUTH_TOKEN)


def read_excel_from_yadisk(file_path):
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç—å
    file_bytes = BytesIO()
    y.download(file_path, file_bytes)
    file_bytes.seek(0)

    # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
    return pd.ExcelFile(file_bytes)


# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

def get_df(file_path):
    try:
        excel_data = read_excel_from_yadisk(file_path)

        all_sheets = excel_data.parse(skiprows=2, sheet_name=None)
        combined_df = pd.concat(all_sheets.values(), ignore_index=True)
        combined_df = combined_df.drop(columns=["‚Ññ"])
        combined_df = combined_df.dropna(subset=["–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä"])
        combined_df["–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä"] = combined_df["–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä"].apply(lambda x: f"{str(x)[:7]}")

        return combined_df
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {e}"


# print(get_df(FILE_PATH_PIE))


def get_by_stud_id(stud_id, file_path):
    df = get_df(file_path)
    if df["–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä"].isin([stud_id]).any():
        row = df.loc[df["–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä"] == stud_id].iloc[0]
        return row
    return "–ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π"


def format_student_data(row):
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    response = [
        f"üìä <b>–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞</b>",
        f"<b>–ù–æ–º–µ—Ä:</b> {row['–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä']}",
        "",
        "<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>"
    ]

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
    for subject, grade in row.items():
        if subject == "–°—Ç—É–¥–µ–Ω—á. –Ω–æ–º–µ—Ä" or subject == "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ":
            continue
        if str(grade).strip().lower() != "nan":
            grade_str = ("‚úÖ –∑–∞—á—ë—Ç" if str(grade).strip().lower() == "–∑–∞—á"
                         else "‚ùå –Ω–µ–∑–∞—á—ë—Ç" if str(grade).strip().lower() == "–Ω–µ–∑–∞—á/"
            else "‚ùå –Ω–µ—è–≤–∫–∞" if str(grade).strip().lower() == "–Ω–µ—è–≤/"
            else "üî¥ 2" if str(grade).strip() == "2/"
            else f"üü¢ {grade}")
            response.append(f"‚ñ™ <i>{subject}:</i> {grade_str}")

    return "\n".join(response)

# print(get_by_stud_id("1036399", FILE_PATH_PIE))
